# OpenSSL intermediate CA configuration file.
# Copy to `intermediate-ca/openssl.conf`.

[ ca ]
# `man ca`
default_ca = CA_default

[ CA_default ]
# Directory and file locations.
dir              = .
certs            = $dir/cert
crl_dir          = $dir/crl
new_certs_dir    = $dir/newcert
database         = $dir/index.txt
serial           = $dir/serial
RANDFILE         = $dir/key/.rand

# The root key and root certificate.
private_key      = $dir/key/proxy-ca.key
certificate      = $dir/cert/proxy-ca.cert

# For certificate revocation lists.
crlnumber        = $dir/crlnumber
crl              = $dir/crl/server-ca.crl
crl_extensions   = crl_ext
default_crl_days = 30

# SHA-1 is deprecated, so use SHA-2 instead.
default_md       = sha512

name_opt         = ca_default
cert_opt         = ca_default
default_days     = 1105
preserve         = no
policy           = policy_loose

[ policy_strict ]
# The root CA should only sign intermediate certificates that match.
# See the POLICY FORMAT section of `man ca`.
countryName            = match
stateOrProvinceName    = match
organizationName       = match
organizationalUnitName = supplied
commonName             = supplied
emailAddress           = supplied

[ policy_loose ]
# Allow the intermediate CA to sign a more diverse range of certificates.
# See the POLICY FORMAT section of the `ca` man page.
countryName            = supplied
stateOrProvinceName    = supplied
localityName           = supplied
organizationName       = match
organizationalUnitName = supplied
commonName             = supplied
emailAddress           = supplied

[ req ]
# Options for the `req` tool (`man req`).
default_bits       = 4096
distinguished_name = req_distinguished_name
string_mask        = utf8only

# The message digest. The stronger, the better.
default_md         = sha512

# Extension to add when the -x509 option is used.
x509_extensions    = v3_ca

[ req_distinguished_name ]
# The prompts displayed to the user.
# See: https://en.wikipedia.org/wiki/Certificate_signing_request
countryName                    = Country Code (2 letters)
stateOrProvinceName            = State or Province Name
localityName                   = Locality Name
0.organizationName             = Organization Name
organizationalUnitName         = Organizational Unit Name
commonName                     = Common Name
emailAddress                   = Email Address

# Default values for prompt input.
countryName_default            = US
stateOrProvinceName_default    = Massachusetts
localityName_default           = Cambridge
0.organizationName_default     = Sitecues
organizationalUnitName_default = Engineering
emailAddress_default           = admin@sitecues.com

# Limits for prompt input.
commonName_min                 = 12

[ v3_ca ]
# Extensions for a typical CA (`man x509v3_config`).
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid:always,issuer
basicConstraints = critical, CA:true
keyUsage = critical, digitalSignature, cRLSign, keyCertSign

[ v3_intermediate_ca ]
# Extensions for a typical intermediate CA (`man x509v3_config`).
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid:always,issuer
basicConstraints = critical, CA:true, pathlen:0
keyUsage = critical, digitalSignature, cRLSign, keyCertSign

[ usr_cert ]
# Extensions for client certificates (`man x509v3_config`).
basicConstraints = CA:FALSE
nsCertType = client
nsComment = "Client Certificate"
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer
keyUsage = critical, nonRepudiation, digitalSignature, keyEncipherment
extendedKeyUsage = clientAuth

[ server_cert ]
# Extensions for server certificates (`man x509v3_config`).
basicConstraints = CA:FALSE
nsCertType = server
nsComment = "Server Certificate"
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer:always
keyUsage = critical, digitalSignature, keyEncipherment
extendedKeyUsage = serverAuth

[ crl_ext ]
# Extension for CRLs (`man x509v3_config`).
authorityKeyIdentifier=keyid:always

[ ocsp ]
# Extension for OCSP signing certificates (`man ocsp`).
basicConstraints = CA:FALSE
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer
keyUsage = critical, digitalSignature
extendedKeyUsage = critical, OCSPSigning
